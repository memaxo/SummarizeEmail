# Azure AD App Registration Details
TENANT_ID=your_tenant_id_here
CLIENT_ID=your_client_id_here
CLIENT_SECRET=your_client_secret_here
TARGET_USER_ID=target_user_id_here

# LLM Provider Configuration
# Options: "openai" or "ollama"
LLM_PROVIDER=openai

# OpenAI Configuration (if using OpenAI)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL_NAME=gpt-4o-mini

# Ollama Configuration (if using Ollama)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3

# Redis Cache Configuration
# For Docker: redis://redis:6379/0
# For local: redis://localhost:6379/0
REDIS_URL=redis://redis:6379/0
CACHE_EXPIRATION_SECONDS=3600

# PostgreSQL Database Configuration
# For Docker: use service names (db)
# For local: use localhost
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_DB=email_summarizer
POSTGRES_SERVER=db
POSTGRES_PORT=5432

# Additional DB configuration for compatibility
DB_USER=user
DB_PASSWORD=password
DB_NAME=email_summarizer
DB_HOST=db
DB_PORT=5432

# Rate Limiting Configuration
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_TIMESCALE=minute

# RAG Ingestion Configuration
RAG_INGESTION_INTERVAL_HOURS=24

# Application Configuration
LOG_LEVEL=INFO
ENVIRONMENT=production

# Security Configuration (generate strong secrets for production)
# Generate with: openssl rand -hex 32
SECRET_KEY=your_secret_key_here

# CORS Configuration (comma-separated origins)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000

# Optional: AWS Configuration (if using AWS services)
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_REGION=us-east-1
